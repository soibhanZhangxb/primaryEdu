import{d as ie,r as K,y as D,w as se,o as ae,C as z,f as G,g as T,h as p,bE as N,A as m,z as W,a as g,e8 as I,e9 as de,ea as X,eb as B,ec as q,B as ue,ed as re,m as H,_ as ce}from"./index-Dks_UUQM.js";const pe={class:"container mx-auto px-4 py-8"},we={class:"grid grid-cols-1 lg:grid-cols-3 gap-8"},ye={class:"bg-white rounded-xl shadow-lg p-6"},fe={class:"mb-4"},me={class:"mb-4"},he={key:0,class:"mb-4"},ge={class:"mb-4"},be={class:"mb-4"},ve={class:"mb-4"},xe={class:"lg:col-span-2 bg-white rounded-xl shadow-lg p-6"},Ce={class:"relative w-full h-[500px] bg-gray-50 rounded-lg overflow-hidden"},ke=ie({__name:"ptest",setup(Re){const Q=K(null),$=K(null),V=K(null),M=K(null),S=K(null),t=D({pulleyType:"fixed",weight:50,frictionCoefficient:.1,showForces:!0,showValues:!0,movablePulleyCount:1,isSimulating:!1,animationFrameId:null}),b=D({width:800,height:500}),j=()=>t.pulleyType==="fixed"?t.weight:t.pulleyType==="movable"?t.weight/2:t.weight/(t.movablePulleyCount*2),Z=()=>{const o=j(),e=t.weight/(t.pulleyType==="movable"?2:t.pulleyType==="system"?t.movablePulleyCount*2:1);return Math.min(100,Math.round(e/(o+o*t.frictionCoefficient)*100))},O=()=>{var d,i,a,c,r,u,s,f;const o=(i=(d=$.value)==null?void 0:d.getNode())==null?void 0:i.getLayer(),e=(c=(a=V.value)==null?void 0:a.getNode())==null?void 0:c.getLayer(),n=(u=(r=M.value)==null?void 0:r.getNode())==null?void 0:u.getLayer(),l=(f=(s=S.value)==null?void 0:s.getNode())==null?void 0:f.getLayer();if(o&&o.destroyChildren(),e&&e.destroyChildren(),n&&n.destroyChildren(),l&&l.destroyChildren(),o){const v=new window.Konva.Rect({x:0,y:0,width:b.width,height:b.height,fill:"#f9fafb"});o.add(v);const x=20,k="#e5e7eb";for(let y=0;y<=b.width;y+=x){const R=new window.Konva.Line({points:[y,0,y,b.height],stroke:k,strokeWidth:1});o.add(R)}for(let y=0;y<=b.height;y+=x){const R=new window.Konva.Line({points:[0,y,b.width,y],stroke:k,strokeWidth:1});o.add(R)}o.draw()}e&&(t.pulleyType==="fixed"?ee(e):t.pulleyType==="movable"?te(e):oe(e),e.draw()),Y(),A()},ee=o=>{const n=b.width/2,l=100,d=new window.Konva.Rect({x:n-60,y:l-20,width:120,height:10,fill:"#334155"});o.add(d);const i=new window.Konva.Rect({x:n-5,y:l-80,width:10,height:60,fill:"#334155"});o.add(i);const a=new window.Konva.Circle({x:n,y:l,radius:40,stroke:"#1e293b",strokeWidth:3,fill:"#cbd5e1"});o.add(a);const c=new window.Konva.Circle({x:n,y:l,radius:5,fill:"#1e293b"});o.add(c);const r=new window.Konva.Line({points:[n-40,l,n-40,l-50],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(r);const u=new window.Konva.Line({points:[n-40,l,n-40,l+200],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(u);const s=60,f=40,v=n-40,x=l+200-s/2,k=new window.Konva.Rect({x:v-f/2,y:x-s/2,width:f,height:s,fill:"#ef4444",stroke:"#b91c1c",strokeWidth:2});o.add(k),t.weightObj=k,t.ropeBottom=u},te=o=>{const n=b.width/2,l=150,d=new window.Konva.Rect({x:n-60,y:50,width:120,height:10,fill:"#334155"});o.add(d);const i=new window.Konva.Circle({x:n,y:50,radius:5,fill:"#1e293b"});o.add(i);const a=new window.Konva.Circle({x:n,y:l,radius:40,stroke:"#1e293b",strokeWidth:3,fill:"#cbd5e1"});o.add(a);const c=new window.Konva.Circle({x:n,y:l,radius:5,fill:"#1e293b"});o.add(c);const r=new window.Konva.Line({points:[n-40,l,n-40,50],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(r);const u=new window.Konva.Line({points:[n+40,l,n+40,50],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(u);const s=60,f=40,v=n,x=l+40+s/2+10,k=new window.Konva.Rect({x:v-f/2,y:x-s/2,width:f,height:s,fill:"#ef4444",stroke:"#b91c1c",strokeWidth:2});o.add(k);const y=new window.Konva.Line({points:[v,x-s/2,v,l+40],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(y),t.weightObj=k,t.pulleyObj=a,t.ropeLeft=r,t.ropeRight=u,t.connectingRope=y},oe=o=>{const n=b.width/2,l=100,d=250,i=new window.Konva.Rect({x:n-80,y:l-20,width:160,height:10,fill:"#334155"});o.add(i);const a=[],c=t.movablePulleyCount;for(let w=0;w<c;w++){const C=n-(c-1)*35*.8+w*35*1.6,P=new window.Konva.Circle({x:C,y:l,radius:35,stroke:"#1e293b",strokeWidth:3,fill:"#cbd5e1"});o.add(P);const h=new window.Konva.Circle({x:C,y:l,radius:5,fill:"#1e293b"});o.add(h),a.push({pulley:P,x:C,y:l})}const r=[];for(let w=0;w<t.movablePulleyCount;w++){const C=n-(t.movablePulleyCount-1)*35*.8+w*35*1.6,P=new window.Konva.Circle({x:C,y:d,radius:35,stroke:"#1e293b",strokeWidth:3,fill:"#94a3b8"});o.add(P);const h=new window.Konva.Circle({x:C,y:d,radius:5,fill:"#1e293b"});o.add(h),r.push({pulley:P,x:C,y:d})}const u=60,s=40+(t.movablePulleyCount-1)*20,f=n,v=d+35+u/2+10,x=new window.Konva.Rect({x:f-s/2,y:v-u/2,width:s,height:u,fill:"#ef4444",stroke:"#b91c1c",strokeWidth:2});o.add(x);const k=[];for(let w=0;w<t.movablePulleyCount;w++){const C=new window.Konva.Line({points:[r[w].x,r[w].y+35,f-s/2+w*s/(t.movablePulleyCount-1||1),v-u/2],stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(C),k.push(C)}let y=[],R=a[0].x-35,F=l-30;y.push(R,F);for(let w=0;w<t.movablePulleyCount*2;w++){const C=w%2===0,P=Math.floor(w/2);if(C){const h=a[P];y.push(R,h.y),y.push(h.x,h.y),R=h.x,F=h.y}else{const h=r[P];y.push(R,h.y),y.push(h.x,h.y),R=h.x,F=h.y}}y.push(R,F+40);const U=new window.Konva.Line({points:y,stroke:"#78350f",strokeWidth:3,lineCap:"round",lineJoin:"round"});o.add(U),t.weightObj=x,t.movablePulleys=r.map(w=>w.pulley),t.fixedPulleys=a.map(w=>w.pulley),t.rope=U,t.weightConnectors=k},Y=()=>{var l,d;const o=(d=(l=M.value)==null?void 0:l.getNode())==null?void 0:d.getLayer();if(!o||!t.showForces)return;o.destroyChildren();const e=j(),n=t.weight;if(t.pulleyType==="fixed"){const i=t.weightObj,a=t.ropeBottom;if(i&&a){const c=i.x()+i.width()/2,r=i.y();L(o,c,r,0,100,n,"#ef4444"),L(o,c,r,0,-100,e,"#3b82f6");const u=a.points()[0],s=a.points()[1];L(o,u,s,0,-100,e,"#3b82f6")}}else if(t.pulleyType==="movable"){const i=t.weightObj,a=t.pulleyObj;if(i&&a){const c=i.x()+i.width()/2,r=i.y();L(o,c,r,0,100,n,"#ef4444");const u=a.x(),s=a.y();L(o,u-a.radius(),s,-50,0,e,"#3b82f6"),L(o,u+a.radius(),s,50,0,e,"#3b82f6")}}else{const i=t.weightObj,a=t.movablePulleys;if(i&&a&&a.length>0){const c=i.x()+i.width()/2,r=i.y();L(o,c,r,0,100,n,"#ef4444"),a.forEach(u=>{const s=u.x(),f=u.y();L(o,s-u.radius(),f,-50,0,e,"#3b82f6"),L(o,s+u.radius(),f,50,0,e,"#3b82f6")})}}o.draw()},L=(o,e,n,l,d,i,a)=>{const r=new window.Konva.Line({points:[e,n,e+l*.5,n+d*.5],stroke:a,strokeWidth:2,lineCap:"round",lineJoin:"round"});o.add(r);const u=10,s=Math.atan2(d,l),f=new window.Konva.Line({points:[e+l*.5,n+d*.5,e+l*.5-u*Math.cos(s-Math.PI/6),n+d*.5-u*Math.sin(s-Math.PI/6)],stroke:a,strokeWidth:2,lineCap:"round",lineJoin:"round"});o.add(f);const v=new window.Konva.Line({points:[e+l*.5,n+d*.5,e+l*.5-u*Math.cos(s+Math.PI/6),n+d*.5-u*Math.sin(s+Math.PI/6)],stroke:a,strokeWidth:2,lineCap:"round",lineJoin:"round"});o.add(v);const x=new window.Konva.Text({x:e+l*.5/2-15,y:n+d*.5/2-15,text:`${i}N`,fontSize:12,fill:a});o.add(x)},A=()=>{var a,c;const o=(c=(a=S.value)==null?void 0:a.getNode())==null?void 0:c.getLayer();if(!o||!t.showValues)return;o.destroyChildren();const e=j(),n=Z(),l=new window.Konva.Text({x:20,y:20,text:`拉力: ${e.toFixed(1)} N`,fontSize:16,fill:"#1e293b"});o.add(l);const d=new window.Konva.Text({x:20,y:45,text:`物重: ${t.weight} N`,fontSize:16,fill:"#1e293b"});o.add(d);const i=new window.Konva.Text({x:20,y:70,text:`机械效率: ${n}%`,fontSize:16,fill:"#1e293b"});if(o.add(i),t.pulleyType==="system"&&t.movablePulleys&&t.movablePulleys.length>0){const r=t.movablePulleys[0],u=r.x(),s=r.y()-40,f=new window.Konva.Text({x:u-60,y:s,text:`承重绳子段数: ${t.movablePulleyCount*2}`,fontSize:14,fill:"#1e293b"});o.add(f)}o.draw()},le=()=>{t.isSimulating&&ne(),t.isSimulating=!0,O(),t.pulleyType==="fixed"?E():t.pulleyType==="movable"?_():J()},ne=()=>{t.isSimulating=!1,t.animationFrameId&&(cancelAnimationFrame(t.animationFrameId),t.animationFrameId=null)},E=()=>{var a,c;if(!t.isSimulating)return;const o=t.weightObj,e=t.ropeBottom;if(!o||!e)return;const d=Math.sin(Date.now()*.02)*30;o.y(o.y()+d-o.getAttr("originalY",o.y())),e.points([e.points()[0],e.points()[1],e.points()[2],e.points()[3]+d-e.getAttr("originalY",e.points()[3])]),o.hasAttr("originalY")||o.setAttr("originalY",o.y()),e.hasAttr("originalY")||e.setAttr("originalY",e.points()[3]),Y(),A();const i=(c=(a=V.value)==null?void 0:a.getNode())==null?void 0:c.getLayer();i&&i.draw(),t.animationFrameId=requestAnimationFrame(E)},_=()=>{var u,s;if(!t.isSimulating)return;const o=t.weightObj,e=t.pulleyObj,n=t.ropeLeft,l=t.ropeRight,d=t.connectingRope;if(!o||!e||!n||!l||!d)return;const c=Math.sin(Date.now()*.015)*20;e.y(e.y()+c-e.getAttr("originalY",e.y())),o.y(o.y()+c-o.getAttr("originalY",o.y())),n.points([n.points()[0],n.points()[1],n.points()[2],e.y()]),l.points([l.points()[0],l.points()[1],l.points()[2],e.y()]),d.points([d.points()[0],d.points()[1],d.points()[2],e.y()+e.radius()]),e.hasAttr("originalY")||e.setAttr("originalY",e.y()),o.hasAttr("originalY")||o.setAttr("originalY",o.y()),Y(),A();const r=(s=(u=V.value)==null?void 0:u.getNode())==null?void 0:s.getLayer();r&&r.draw(),t.animationFrameId=requestAnimationFrame(_)},J=()=>{var r,u;if(!t.isSimulating)return;const o=t.weightObj,e=t.movablePulleys,n=t.rope,l=t.weightConnectors;if(!o||!e||!e.length||!n||!l)return;const a=Math.sin(Date.now()*.01)*25;e.forEach(s=>{s.y(s.y()+a-s.getAttr("originalY",s.y())),s.hasAttr("originalY")||s.setAttr("originalY",s.y())}),o.y(o.y()+a-o.getAttr("originalY",o.y())),o.hasAttr("originalY")||o.setAttr("originalY",o.y()),l.forEach((s,f)=>{s.points([s.points()[0],s.points()[1],s.points()[2],o.y()-o.height()/2])}),Y(),A();const c=(u=(r=V.value)==null?void 0:r.getNode())==null?void 0:u.getLayer();c&&c.draw(),t.animationFrameId=requestAnimationFrame(J)};return se([()=>t.pulleyType,()=>t.weight,()=>t.frictionCoefficient,()=>t.movablePulleyCount,()=>t.showForces,()=>t.showValues],()=>{t.isSimulating||O()}),ae(()=>{O()}),(o,e)=>{const n=z("v-rect"),l=z("v-layer"),d=z("v-stage");return T(),G("div",pe,[e[18]||(e[18]=p("h1",{class:"text-3xl font-bold mb-6 text-center"}," 初中物理动态滑轮组演示工具 ",-1)),p("div",we,[p("div",ye,[e[16]||(e[16]=p("h2",{class:"text-xl font-semibold mb-4"},"参数设置",-1)),p("div",fe,[e[9]||(e[9]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"滑轮组类型",-1)),m(g(de),{modelValue:t.pulleyType,"onUpdate:modelValue":e[0]||(e[0]=i=>t.pulleyType=i),size:"small"},{default:W(()=>[m(g(I),{label:"fixed",value:"定滑轮"}),m(g(I),{label:"movable",value:"动滑轮"}),m(g(I),{label:"system",value:"滑轮组"})]),_:1},8,["modelValue"])]),p("div",me,[e[10]||(e[10]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"物重 (N)",-1)),m(g(X),{modelValue:t.weight,"onUpdate:modelValue":e[1]||(e[1]=i=>t.weight=i),min:10,max:100,step:5,size:"small"},null,8,["modelValue"]),m(g(B),{modelValue:t.weight,"onUpdate:modelValue":e[2]||(e[2]=i=>t.weight=i),modelModifiers:{number:!0},size:"small",class:"mt-1"},null,8,["modelValue"])]),t.pulleyType==="system"?(T(),G("div",he,[e[11]||(e[11]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"动滑轮数量",-1)),m(g(X),{modelValue:o.movablePulleyCount,"onUpdate:modelValue":e[3]||(e[3]=i=>o.movablePulleyCount=i),min:1,max:3,step:1,size:"small"},null,8,["modelValue"]),m(g(B),{modelValue:o.movablePulleyCount,"onUpdate:modelValue":e[4]||(e[4]=i=>o.movablePulleyCount=i),modelModifiers:{number:!0},size:"small",class:"mt-1"},null,8,["modelValue"])])):N("",!0),p("div",ge,[e[12]||(e[12]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"摩擦系数",-1)),m(g(X),{modelValue:t.frictionCoefficient,"onUpdate:modelValue":e[5]||(e[5]=i=>t.frictionCoefficient=i),min:0,max:.5,step:.05,size:"small"},null,8,["modelValue"]),m(g(B),{modelValue:t.frictionCoefficient,"onUpdate:modelValue":e[6]||(e[6]=i=>t.frictionCoefficient=i),modelModifiers:{number:!0},size:"small",class:"mt-1"},null,8,["modelValue"])]),p("div",be,[e[13]||(e[13]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"是否显示力向量",-1)),m(g(q),{modelValue:t.showForces,"onUpdate:modelValue":e[7]||(e[7]=i=>t.showForces=i),size:"small"},null,8,["modelValue"])]),p("div",ve,[e[14]||(e[14]=p("label",{class:"block text-sm font-medium text-gray-700 mb-1"},"是否显示物理量",-1)),m(g(q),{modelValue:t.showValues,"onUpdate:modelValue":e[8]||(e[8]=i=>t.showValues=i),size:"small"},null,8,["modelValue"])]),m(g(re),{type:"primary",class:"w-full mt-4",onClick:le},{default:W(()=>e[15]||(e[15]=[ue(" 开始演示 ")])),_:1,__:[15]})]),p("div",xe,[e[17]||(e[17]=p("h2",{class:"text-xl font-semibold mb-4"},"滑轮组演示",-1)),p("div",Ce,[m(d,{ref_key:"stageRef",ref:Q,config:b,class:"w-full h-full"},{default:W(()=>[m(l,{ref_key:"backgroundLayerRef",ref:$},{default:W(()=>[m(n,{x:0,y:0,width:b.width,height:b.height,fill:"#f9fafb"},null,8,["width","height"])]),_:1},512),m(l,{ref_key:"pulleysLayerRef",ref:V},null,512),t.showForces?(T(),H(l,{key:0,ref_key:"forcesLayerRef",ref:M},null,512)):N("",!0),t.showValues?(T(),H(l,{key:1,ref_key:"labelsLayerRef",ref:S},null,512)):N("",!0)]),_:1},8,["config"])])])]),e[19]||(e[19]=p("div",{class:"mt-8 bg-white rounded-xl shadow-lg p-6"},[p("h2",{class:"text-xl font-semibold mb-4"},"物理原理说明"),p("div",{class:"prose max-w-none"},[p("p",null," 滑轮组是由多个滑轮组合而成的简单机械，主要用于改变力的方向和大小。 "),p("h3",null,"定滑轮"),p("p",null," 定滑轮的轴心固定不动，主要作用是改变力的方向，但不能省力。拉力等于物重：$F = G$ "),p("h3",null,"动滑轮"),p("p",null," 动滑轮的轴心可以移动，能省一半的力，但不能改变力的方向。拉力等于物重的一半：$F = \\frac{G}{2}$ "),p("h3",null,"滑轮组"),p("p",null," 滑轮组由定滑轮和动滑轮组合而成，既能改变力的方向，又能省力。拉力计算公式：$F = \\frac{G}{n}$，其中$n$是承重的绳子段数。 ")])],-1))])}}}),Pe=ce(ke,[["__scopeId","data-v-72e678f0"]]);export{Pe as default};
